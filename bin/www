#!/usr/bin/env node

let app = require('../app');
const http = require('http');

console.log('hello')

app.use((req, res, next) => {
    res.status(404);
    res.render('not-found');
});

app.use((error, req, res, next) => {
    console.log('error: ', req.method, req.path, error);

    if (!res.headersSent) {
        res.status(500);
        res.render('error');
    }
});

//SERVER

let server = http.createServer(app);
server.on('error', error => {
    if(error.syscall !== 'listen'){
        throw error;
    }

    //handle listen errors

    switch (error.code) {
        case 'EACCES':
            console.log(`Port: ${process.env.PORT} requires elevated privileges!`);
            process.exit(1);
            break;
        case 'EADDRINUSE':
            console.log(`Port: ${process.env.PORT} is already in use!`)
            process.exit(1);
            break;
    
        default:
            throw error;
    }
});

//Listen
server.listen(process.env.PORT, () => {
    console.log(`Sacada do Pr√©dio is listening on port ${process.env.PORT}`)
});




